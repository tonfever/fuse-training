<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
	http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd
	http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <cm:property-placeholder id="lab03.placeholder" persistent-id="lab03">
        <cm:default-properties>
            <cm:property name="fuse.host.url" value="http://localhost:8183/cxf"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <cxf:rsServer address="{{fuse.host.url}}/api" id="apiRouterService"
                  loggingFeatureEnabled="false" serviceClass="com.test.lab03.services.APIService">
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="com.test.lab03.error.RestGenericExceptionMapper" id="rsException"/>
        </cxf:providers>
    </cxf:rsServer>

    <bean class="com.test.lab03.StockProcess" id="stockProcess"/>
    <bean class="com.test.lab03.builder.StockTradingResponse" id="stockTradingResponse"/>

    <camelContext id="lab03-1-context" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="blueprint:lab03.placeholder"/>

        <route id="lab03-1-route">
            <from uri="cxfrs:bean:apiRouterService?bindingStyle=SimpleConsumer"/>
            <log id="lab03-1-route" message="[BEFORE REMOVE HEADER] BODY:${body}, HEADER:${headers}"/>
            <to uri="direct:cleanHttpHeader"/>
            <log id="lab03-1-route" message="[AFTER REMOVE HEADER] BODY:${body}, HEADER:${headers}"/>
            <setHeader headerName="vip">
                <jsonpath>$.vip</jsonpath>
            </setHeader>
            <choice>
                <when>
                    <simple>${header.vip} == '1'</simple>
                    <bean ref="stockProcess" method="updateVIP"/>
                </when>
                <otherwise>
                    <bean ref="stockProcess" method="updateNonVIP"/>
                </otherwise>
            </choice>
            <bean ref="stockTradingResponse" method="buildGetContractStatusResponse"/>
        </route>

        <route id="CleanHTTPHeader">
            <from uri="direct:cleanHttpHeader">
            </from>
            <removeHeader headerName="CamelHttpUri"/>
            <removeHeader headerName="CamelHttpPath"/>
            <removeHeader headerName="Content-Length"/>
            <removeHeader headerName="CamelHttpMethod"/>
        </route>
    </camelContext>

</blueprint>
