package com.test.lab05.spring.boot;

import com.test.lab05.model.EmailServiceRequest;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestBindingMode;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

@Component
public class EmailSpringBootRouter extends RouteBuilder {

    private static final String HOST = "localhost";
    private static final String PORT = "9091";

    @Value("${application.email.From}")
    private String From = "CCB Onboarding Case Manager <no-reply@citi.com>";


    @Override
    public void configure() {

        //REST DSL Configuration
        restConfiguration()
            .component("restlet")
            .bindingMode(RestBindingMode.json)
            .dataFormatProperty("prettyPrint", "true")
            .host(HOST)
            .port(PORT);

        //REST DSL - Post method to send emails
        rest("/citi/")
            .post("/sendEmail")
            .consumes("application/json")
            .type(EmailServiceRequest.class)
            .outType(String.class)
            .to("direct:generateHTML");


        from("direct:generateHTML")
            .setProperty("request", simple("${body}"))
            //Generate Email Body from Freemarker Template
            .toD("freemarker:file://" + "{{application.email.templates.directory}}" + "${body.templateID}" + "/${body.language}" + "/emailBody.ftl?contentCache=true")
            .setProperty("emailBody", simple("${body}"))
            .setBody(simple("${exchangeProperty.request}"))
            //Generate Email Subject from Freemarker Template
            .toD("freemarker:file://" + "{{application.email.templates.directory}}" + "${body.templateID}" + "/${body.language}" + "/emailSubject.ftl?contentCache=true")
            .setProperty("emailSubject", simple("${body}"))
            .to("direct:sendEmail");

        from("direct:sendEmail")
            //Fetch From Header from Properties if null or empty in the request
            .choice()
            .when().simple("${exchangeProperty.request.from} != null and ${exchangeProperty.request.from} != '' ")
            .setHeader("From", simple("${exchangeProperty.request.from}"))
            .otherwise()
            .setHeader("From", simple(this.From))
            .end()
            .setHeader("To", simple("${exchangeProperty.request.to}"))
            .setHeader("contentType", constant("text/html"))

            //Setting subject and email Body generated by FreeMarker
            .setHeader("Subject", simple("${exchangeProperty.emailSubject}"))
            .setBody(simple("${exchangeProperty.emailBody}"))
            .to("smtp://localhost")

            //Setting up Rest Response
            .removeHeaders("To")
            .removeHeaders("Subject")
            .setHeader("contentType", constant("text/plain"))
            .setBody(simple("Your Email has been processed."));


    }
}